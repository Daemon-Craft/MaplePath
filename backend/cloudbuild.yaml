steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/maplepath-api:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/maplepath-api:latest'
      - '.'

  # Push to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/maplepath-api:$COMMIT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/maplepath-api:latest']

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'maplepath-api'
      - '--image'
      - 'gcr.io/$PROJECT_ID/maplepath-api:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'DATABASE_URL=${_DATABASE_URL},SECRET_KEY=${_SECRET_KEY},FIREBASE_CREDENTIALS_PATH=/app/firebase-credentials.json'
      - '--set-cloudsql-instances'
      - '${_CLOUD_SQL_CONNECTION_NAME}'
      - '--port'
      - '8080'

# Images to be stored in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/maplepath-api:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/maplepath-api:latest'

# Substitutions (configure in Cloud Build trigger settings)
substitutions:
  _DATABASE_URL: 'postgresql://user:password@/dbname?host=/cloudsql/${_CLOUD_SQL_CONNECTION_NAME}'
  _SECRET_KEY: 'your-secret-key-here'
  _CLOUD_SQL_CONNECTION_NAME: 'PROJECT_ID:REGION:INSTANCE_NAME'

options:
  logging: CLOUD_LOGGING_ONLY

timeout: 900s